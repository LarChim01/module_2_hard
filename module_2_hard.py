# Задание "Слишком древний шифр":
# Вы отправились в путешествие на необитаемый остров и конечно же в очередной вылазке в джунгли вы попали в ловушку местному племени (да-да, классика "Индиана Джонса").
# К вашему удивлению, в племени были неплохие математики и по совместительству фантазёры.
# Вы поняли это, когда после долгих блужданий перед вами появились ворота (выход из ловушки) с двумя каменными вставками для чисел.
# В первом поле камни с числом менялись постоянно (от 3 до 20) случайным образом, а второе было всегда пустым.
#
# К вашему счастью рядом с менее успешными и уже неговорящими путешественниками находился папирус, где были написаны правила для решения этого "ребуса". (Как жаль, что они поняли это так поздно :( ).
#
# Во вторую вставку нужно было написать те пары чисел друг за другом, чтобы число из первой вставки было кратно(делилось без остатка) сумме их значений.
def shifr(keyl):  #функция для определения пар чисел
    shifr = [] # создаём пустой список

    for i in range(1, keyl):
        for j in range(1, keyl):
            if (keyl % (i + j)) == 0 and j > i:

                shifr.append(i)
                shifr.append(j)


    return  ''.join(map(str, shifr)) #возвращаем список в виде строки


key1 = int(input("Ключ: "))
print(f' заветный шифр для {key1}\n', shifr(key1))

# не обязательная часть
j = int(input("Если желаете увидеть все ключи от 3 до 20? - введите 1 - "))
if j==1 :
    for i in range(3,21):
        print(f'ключ {i} шифр {shifr(i)}')



